{"ast":null,"code":"import axios from \"axios\";\nvar entityService = {\n  endpoint: \"https://api.remotebootcamp.dev/api/entities/\",\n  entity: \"Machines\"\n};\n\nentityService.new = payload => {\n  var config = {\n    method: \"POST\",\n    url: entityService.endpoint + entityService.entity,\n    data: payload,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nentityService.getAll = () => {\n  var config = {\n    method: \"GET\",\n    url: entityService.endpoint + entityService.entity,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nexport default entityService;","map":{"version":3,"sources":["/Users/juanpablogermosen/Documents/Sabio/react/Starter.react-componentize/src/services/entityService.js"],"names":["axios","entityService","endpoint","entity","new","payload","config","method","url","data","crossdomain","headers","getAll"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,QAAQ,EAAE,8CADM;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAApB;;AAMAF,aAAa,CAACG,GAAd,GAAqBC,OAAD,IAAa;AAC7B,MAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEP,aAAa,CAACC,QAAd,GAAyBD,aAAa,CAACE,MAFjC;AAGXM,IAAAA,IAAI,EAAEJ,OAHK;AAIXK,IAAAA,WAAW,EAAE,IAJF;AAKXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALE,GAAf;AAOA,SAAOX,KAAK,CAACM,MAAD,CAAZ;AACH,CATD;;AAWAL,aAAa,CAACW,MAAd,GAAuB,MAAM;AACzB,MAAMN,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAEP,aAAa,CAACC,QAAd,GAAyBD,aAAa,CAACE,MAFjC;AAGXO,IAAAA,WAAW,EAAE,IAHF;AAIXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJE,GAAf;AAMA,SAAOX,KAAK,CAACM,MAAD,CAAZ;AACH,CARD;;AAUA,eAAeL,aAAf","sourcesContent":["import axios from \"axios\";\n\nvar entityService = {\n    endpoint: \"https://api.remotebootcamp.dev/api/entities/\",\n    entity: \"Machines\",\n\n}\n\nentityService.new = (payload) => {\n    const config = {\n        method: \"POST\",\n        url: entityService.endpoint + entityService.entity,\n        data: payload,\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return axios(config);\n}\n\nentityService.getAll = () => {\n    const config = {\n        method: \"GET\",\n        url: entityService.endpoint + entityService.entity,\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    };\n    return axios(config)\n}\n\nexport default entityService;"]},"metadata":{},"sourceType":"module"}