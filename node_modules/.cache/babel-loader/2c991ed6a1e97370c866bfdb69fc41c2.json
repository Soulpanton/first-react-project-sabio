{"ast":null,"code":"import axios from \"axios\";\nvar userService = {\n  endpoint: \"https://api.remotebootcamp.dev/api/\"\n};\n\nvar login = payload => {\n  var config = {\n    method: \"POST\",\n    url: userService.endpoint + \"users/login\",\n    data: payload,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nvar register = payload => {\n  var config = {\n    method: \"POST\",\n    url: userService.endpoint + \"users/register\",\n    data: payload,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nvar logout = () => {\n  var config = {\n    method: \"GET\",\n    url: userService.endpoint + \"users/logout\",\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nvar current = () => {\n  var config = {\n    method: \"GET\",\n    url: userService.endpoint + \"users/current\",\n    crossdomain: true\n  };\n  return axios(config);\n}; // const newEntity = (payload) => {\n//     const config = {\n//         method: \"POST\",\n//         url: userService.endpoint + \"entities/Machines\",\n//         data: payload,\n//         crossdomain: true,\n//         headers: { \"Content-Type\": \"application/json\" }\n//     }\n//     return axios(config);\n// }\n\n\nvar newFriend = payload => {\n  var config = {\n    method: \"POST\",\n    url: userService.endpoint + \"friends\",\n    data: payload,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nvar allFriends = () => {\n  var config = {\n    method: \"GET\",\n    url: \"https://api.remotebootcamp.dev/api/friends?pageIndex=0&pageSize=10\",\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nexport { login, logout, current, register, newFriend, allFriends };","map":{"version":3,"sources":["/Users/juanpablogermosen/Documents/Sabio/react/Starter.react-componentize/src/services/userService.js"],"names":["axios","userService","endpoint","login","payload","config","method","url","data","crossdomain","headers","register","logout","current","newFriend","allFriends"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAIC,WAAW,GAAG;AACdC,EAAAA,QAAQ,EAAE;AADI,CAAlB;;AAOA,IAAMC,KAAK,GAAIC,OAAD,IAAa;AACvB,MAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,aAFjB;AAGXM,IAAAA,IAAI,EAAEJ,OAHK;AAIXK,IAAAA,WAAW,EAAE,IAJF;AAKXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALE,GAAf;AAOA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AAEH,CAVD;;AAYA,IAAMM,QAAQ,GAAIP,OAAD,IAAa;AAC1B,MAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,gBAFjB;AAGXM,IAAAA,IAAI,EAAEJ,OAHK;AAIXK,IAAAA,WAAW,EAAE,IAJF;AAKXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALE,GAAf;AAOA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CATD;;AAWA,IAAMO,MAAM,GAAG,MAAM;AACjB,MAAMP,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,cAFjB;AAGXO,IAAAA,WAAW,EAAE,IAHF;AAIXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJE,GAAf;AAMA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AAEH,CATD;;AAWA,IAAMQ,OAAO,GAAG,MAAM;AAClB,MAAMR,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,eAFjB;AAGXO,IAAAA,WAAW,EAAE;AAHF,GAAf;AAKA,SAAOT,KAAK,CAACK,MAAD,CAAZ;AACH,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMS,SAAS,GAAIV,OAAD,IAAa;AAC3B,MAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,SAFjB;AAGXM,IAAAA,IAAI,EAAEJ,OAHK;AAIXK,IAAAA,WAAW,EAAE,IAJF;AAKXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALE,GAAf;AAOA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CATD;;AAWA,IAAMU,UAAU,GAAG,MAAM;AACrB,MAAMV,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAE,oEAFM;AAGXE,IAAAA,WAAW,EAAE,IAHF;AAIXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJE,GAAf;AAMA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CARD;;AAWA,SACIF,KADJ,EAEIS,MAFJ,EAGIC,OAHJ,EAIIF,QAJJ,EAKIG,SALJ,EAMIC,UANJ","sourcesContent":["import axios from \"axios\";\n\nvar userService = {\n    endpoint: \"https://api.remotebootcamp.dev/api/\",\n\n\n\n}\n\nconst login = (payload) => {\n    const config = {\n        method: \"POST\",\n        url: userService.endpoint + \"users/login\",\n        data: payload,\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    };\n    return axios(config)\n\n}\n\nconst register = (payload) => {\n    const config = {\n        method: \"POST\",\n        url: userService.endpoint + \"users/register\",\n        data: payload,\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    };\n    return axios(config)\n}\n\nconst logout = () => {\n    const config = {\n        method: \"GET\",\n        url: userService.endpoint + \"users/logout\",\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    };\n    return axios(config)\n\n}\n\nconst current = () => {\n    const config = {\n        method: \"GET\",\n        url: userService.endpoint + \"users/current\",\n        crossdomain: true\n    };\n    return axios(config)\n}\n\n// const newEntity = (payload) => {\n//     const config = {\n//         method: \"POST\",\n//         url: userService.endpoint + \"entities/Machines\",\n//         data: payload,\n//         crossdomain: true,\n//         headers: { \"Content-Type\": \"application/json\" }\n//     }\n//     return axios(config);\n// }\n\nconst newFriend = (payload) => {\n    const config = {\n        method: \"POST\",\n        url: userService.endpoint + \"friends\",\n        data: payload,\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    }\n    return axios(config);\n}\n\nconst allFriends = () => {\n    const config = {\n        method: \"GET\",\n        url: \"https://api.remotebootcamp.dev/api/friends?pageIndex=0&pageSize=10\",\n        crossdomain: true,\n        headers: { \"Content-Type\": \"application/json\" }\n    };\n    return axios(config)\n}\n\n\nexport {\n    login,\n    logout,\n    current,\n    register,\n    newFriend,\n    allFriends,\n}\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}